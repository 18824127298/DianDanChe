==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:49:07 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接)

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:49:07 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:49:07 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接)

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:50:10 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
'ALLSELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:50:10 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:50:11 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
'ALLSELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:50:49 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
'ALLSELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:50:49 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:50:49 ====
SELECT c.month, COUNT(godid) AS godcount FROM (SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALLSELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT [CreateTime]  AS month, [Id]  AS godid FROM [God] WHERE [GodType] IN (1,2) AND NOT (21800 <= [Id] AND [Id] <= 21803)) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month 
-------- 错误信息 --------
'ALLSELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:54:37 ====
SELECT c.month, COUNT(DISTINCT(godid)) As huoyuecount FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS cJOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] AS godid FROM [FundsFlow] WHERE [FeeType] = 21 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:54:37 ====
SELECT c.month, COUNT(DISTINCT(godid)) As huoyuecount FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS cJOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] AS godid FROM [FundsFlow] WHERE [FeeType] = 21 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 16:54:37 ====
SELECT c.month, COUNT(DISTINCT(godid)) As huoyuecount FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS cJOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] AS godid FROM [FundsFlow] WHERE [FeeType] = 21 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS d ON c.month > d.month GROUP BY c.month ORDER BY c.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:37:17 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:37:17 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:37:18 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:40:16 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:40:16 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:40:17 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:41:32 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:41:32 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
【重试一次(ExecuteDataSet)】

==== (instanceDefault)【SQL语句运行错误】2016/10/8 17:41:33 ====
SELECT a.month, COUNT(1) AS godNum FROM ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance)*-1 AS balance FROM SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN (          SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [IncomeGodId],SUM([FundsFlow].[Amount]) AS income FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [IncomeGodId] AND [IncomeGodId] <= 21803) AND [FeeType] = 23 GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [IncomeGodId] ) AS a FULL OUTER JOIN ( SELECT DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0) AS month, [PayGodId] ,  SUM([FundsFlow].[Amount])  AS pay FROM [FundsFlow] JOIN [Credit] ON [FundsFlow].[CreditId] = [Credit].[Id] WHERE [IsComputing] = 1 AND NOT (21800 <= [PayGodId] AND [PayGodId] <= 21803) AND ([FeeType] = 21 OR [FeeType] = 909) GROUP BY DATEADD(month, DATEDIFF(month, 0, [FundsFlow].[UpdateTime]), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid HAVING SUM(balance) < 0) AS f GROUP BY month, godid) AS a LEFT JOIN ( SELECT DATEADD(month, -1, month) AS month, godid, SUM(balance) AS balance FROM (SELECT c.month, d.godid, SUM(balance) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -10, 0) AS month UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -9, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -8, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -7, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -6, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -5, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -4, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -3, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -1, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) -0, 0) UNION ALL SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()) +1, 0) ) AS c JOIN ( SELECT COALESCE (a.month, b.month) AS month, COALESCE (a.incomegodid,b.paygodid) AS godid, COALESCE(a.income,0)-COALESCE (b.pay,0) AS balance FROM ( SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [IncomeGodId],  SUM([Amount]) AS income FROM [FundsFlow]  WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [IncomeGodId] ) AS a FULL OUTER JOIN (SELECT DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0) AS month, [PayGodId] ,  SUM([Amount])  AS pay FROM [FundsFlow] WHERE [IsComputing] = 1 GROUP BY DATEADD(month, DATEDIFF(month, 0, UpdateTime), 0), [PayGodId] ) AS b ON a.month = b.month AND a.incomegodid=b.paygodid) AS d ON c.month > d.month GROUP BY c.month, d.godid ) AS F GROUP BY month, godid) AS b ON a.month = b.month AND a.godid = b.godid WHERE (a.balance + COALESCE(b.balance,0)) >= 100 GROUP BY a.month
-------- 错误信息 --------
关键字 'SELECT' 附近有语法错误。
')' 附近有语法错误。
关键字 'AS' 附近有语法错误。

