@{
    Layout = null;
    ViewBag.Title = "专属二维码";
}
<script type="text/javascript" src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
<div style="margin-top: 15%; text-align: center;">
    <table style="text-align: center; width: 100%;">
        <tbody style="margin-top: 10%; table-layout: fixed; text-align: center;">
            <tr>
                <td style="font-size: 50px; color: #f08916; text-align: center;">转发二维码邀请好友<br /> 各得30元加油优惠券
                </td>
            </tr>
            @*        <tr>
            <td style="word-break: break-all; word-wrap: break-word; padding: 5px 15%; font-size: 28px">https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=@ViewBag.ticket
            </td>
        </tr>*@
        </tbody>
    </table>
    <p>
        <img id="randimg" src="@("https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=" + ViewBag.ticket)" style="width:80%"/>
    </p>
</div>
<table style="text-align: center; width: 100%;">
    <tbody style="margin-top: 10%; table-layout: fixed; text-align: center;">
        <tr>
            <td style="font-size: 50px; text-align: center;"><a href="~/YouKaRules/ActivityRules" style="text-decoration:none; color:rgb(128,128,128)">《活动规则》</a>
            </td>
        </tr>
        @*        <tr>
            <td style="word-break: break-all; word-wrap: break-word; padding: 5px 15%; font-size: 28px">https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=@ViewBag.ticket
            </td>
        </tr>*@
    </tbody>
</table>
<script src="~/Content/js/jquery-1.11.1.min.js"></script>
<script type="text/javascript">
    var title = '车1号',
        imgUrl = '@("https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=" + ViewBag.ticket)',
        desc = '@ViewBag.Name' + '邀请您跟我一起参与车1号优惠券活动啦';

    $(function () {
        var url = location.href.split('#')[0];
        //从后端请求参数
        $.post("/YouKa/GetWXSharedParam", { url: url, rn: Math.random() }, function (json) {
            var data = $.parseJSON(json);
            if (data.result === true) {
                wx.config({
                    debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                    appId: data.appId, // 必填，公众号的唯一标识
                    timestamp: data.timestamp, // 必填，生成签名的时间戳
                    nonceStr: data.nonceStr, // 必填，生成签名的随机串
                    signature: data.signature,// 必填，签名，见附录1
                    menuItem: 'addContact',
                    jsApiList: [
                        'onMenuShareTimeline',
                        'onMenuShareAppMessage'
                    ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
                });
            }
        });
    });

    wx.ready(function () {
        // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。


        //获取“分享到朋友圈”按钮点击状态及自定义分享内容接口
        wx.onMenuShareTimeline({
            title: title, // 分享标题
            link: window.location.href, // 分享链接
            imgUrl: imgUrl, // 分享图标
            trigger: function (res) {
                //监听Menu中的按钮点击时触发的方法，该方法仅支持Menu中的相关接口。
                //不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回。
            },
            success: function (res) {
                //接口调用成功时执行的回调函数。
            },
            cancel: function (res) {
                //用户点击取消时的回调函数，仅部分有用户取消操作的api才会用到。
            },
            fail: function (res) {
                //接口调用失败时执行的回调函数。
            },
            complete: function (res) {
                //接口调用完成时执行的回调函数，无论成功或失败都会执行。
            }
            //以上几个函数都带有一个参数，类型为对象，其中除了每个接口本身返回的数据之外，还有一个通用属性errMsg，其值格式如下：
            /*调用成功时："xxx:ok" ，其中xxx为调用的接口名
            用户取消时："xxx:cancel"，其中xxx为调用的接口名
            调用失败时：其值为具体错误信息
        */
        });


        //获取“分享给朋友”按钮点击状态及自定义分享内容接口
        wx.onMenuShareAppMessage({
            title: title, // 分享标题
            desc: desc, // 分享描述
            link: window.location.href, // 分享链接
            imgUrl: imgUrl, // 分享图标
            type: 'link', // 分享类型,music、video或link，不填默认为link
            dataUrl: '', // 如果type是music或video，则要提供数据链接，默认为空
            success: function () {
                // 用户确认分享后执行的回调函数
            },
            cancel: function () {
                // 用户取消分享后执行的回调函数
            }
        });
    });

    wx.error(function (res) {
        //allPrpos(res);
        // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。

    });

    var AjaxPostData = function (url, data, success) {
        ///    <summary>
        ///        Ajax的POST方法
        ///    </summary>
        ///    <param name="url" type="String">
        ///        网址/参数
        /// </param>
        ///    <param name="data" type="JSON类型">
        ///        参数
        /// </param>
        ///    <param name="success" type="Function">
        ///        回调函数，不用这个的时候为同步，用的时候为异步（有一个返回数据参数（数据））
        /// </param>
        ///    <returns type="string">同步时返回数据，异步时在回调函数中取</returns>

        var val = "";

        var param = {
            url: encodeURI(url),
            type: "POST",
            timeout: 50000,
            async: false,
            data: data,
            dataType: "text",
            success: function (tempData) { },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(arguments);
            }
        };

        if (!success) {
            param.async = false;
            param.success = function (tempData) {
                val = tempData;
            };
        } else {
            param.async = true;
            param.success = function (r) {
                if (success) {
                    var len = r.length;
                    var result = JSON.parse(r.substring(76, len - 9));

                    success(result);
                }
            };
        }

        $.ajax(param);

        return val;
    }
</script>
